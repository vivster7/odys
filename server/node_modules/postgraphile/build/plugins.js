"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const graphile_utils_1 = require("graphile-utils");
const JSON5 = require("json5");
exports.makePgSmartTagsFromFilePlugin = (tagsFile = process.cwd() + '/postgraphile.tags.json5') => {
    /*
     * We're wrapping the `smartTagsPlugin` defined below with a plugin wrapper
     * so that any errors from reading the smart tags file are thrown when the
     * plugin is *loaded* rather than from when it is defined.
     */
    const plugin = (builder, options) => {
        function handleTagsError(err) {
            console.error(`Failed to process smart tags file '${tagsFile}': ${err.message}`);
        }
        const initialTagsJSON = JSON5.parse(fs_1.readFileSync(tagsFile, 'utf8'));
        let tagsListener = null;
        const smartTagsPlugin = graphile_utils_1.makeJSONPgSmartTagsPlugin(initialTagsJSON, updateJSON => {
            if (tagsListener) {
                fs_1.unwatchFile(tagsFile, tagsListener);
                tagsListener = null;
            }
            if (updateJSON) {
                tagsListener = (_current, _previous) => {
                    fs_1.readFile(tagsFile, 'utf8', (err, data) => {
                        if (err) {
                            if (err['code'] === 'ENOENT') {
                                updateJSON(null);
                            }
                            else {
                                handleTagsError(err);
                            }
                            return;
                        }
                        try {
                            updateJSON(JSON5.parse(data));
                        }
                        catch (e) {
                            handleTagsError(e);
                        }
                    });
                };
                fs_1.watchFile(tagsFile, { interval: 507 }, tagsListener);
            }
        });
        return smartTagsPlugin(builder, options);
    };
    return plugin;
};
exports.TagsFilePlugin = exports.makePgSmartTagsFromFilePlugin();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGx1Z2lucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9wbHVnaW5zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkJBQTJFO0FBQzNFLG1EQUE0RTtBQUM1RSwrQkFBK0I7QUFHbEIsUUFBQSw2QkFBNkIsR0FBRyxDQUMzQyxRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLDBCQUEwQixFQUM3QyxFQUFFO0lBQ1Y7Ozs7T0FJRztJQUNILE1BQU0sTUFBTSxHQUFXLENBQUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxFQUFFO1FBQzFDLFNBQVMsZUFBZSxDQUFDLEdBQVU7WUFDakMsT0FBTyxDQUFDLEtBQUssQ0FBQyxzQ0FBc0MsUUFBUSxNQUFNLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQ25GLENBQUM7UUFFRCxNQUFNLGVBQWUsR0FBb0IsS0FBSyxDQUFDLEtBQUssQ0FBQyxpQkFBWSxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBRXJGLElBQUksWUFBWSxHQUF1RCxJQUFJLENBQUM7UUFDNUUsTUFBTSxlQUFlLEdBQUcsMENBQXlCLENBQUMsZUFBZSxFQUFFLFVBQVUsQ0FBQyxFQUFFO1lBQzlFLElBQUksWUFBWSxFQUFFO2dCQUNoQixnQkFBVyxDQUFDLFFBQVEsRUFBRSxZQUFZLENBQUMsQ0FBQztnQkFDcEMsWUFBWSxHQUFHLElBQUksQ0FBQzthQUNyQjtZQUNELElBQUksVUFBVSxFQUFFO2dCQUNkLFlBQVksR0FBRyxDQUFDLFFBQVEsRUFBRSxTQUFTLEVBQVEsRUFBRTtvQkFDM0MsYUFBUSxDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLEVBQUU7d0JBQ3ZDLElBQUksR0FBRyxFQUFFOzRCQUNQLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLFFBQVEsRUFBRTtnQ0FDNUIsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDOzZCQUNsQjtpQ0FBTTtnQ0FDTCxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUM7NkJBQ3RCOzRCQUNELE9BQU87eUJBQ1I7d0JBQ0QsSUFBSTs0QkFDRixVQUFVLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO3lCQUMvQjt3QkFBQyxPQUFPLENBQUMsRUFBRTs0QkFDVixlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUM7eUJBQ3BCO29CQUNILENBQUMsQ0FBQyxDQUFDO2dCQUNMLENBQUMsQ0FBQztnQkFFRixjQUFTLENBQUMsUUFBUSxFQUFFLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBRSxFQUFFLFlBQVksQ0FBQyxDQUFDO2FBQ3REO1FBQ0gsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLGVBQWUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDM0MsQ0FBQyxDQUFDO0lBQ0YsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQyxDQUFDO0FBRVcsUUFBQSxjQUFjLEdBQUcscUNBQTZCLEVBQUUsQ0FBQyJ9